pipeline {
    agent any

    tools {
        // Ensure that 'jdk' and 'maven' correspond to actual tool names configured in Jenkins
        jdk 'JAVA_HOME'  // Replace with the actual JDK tool name set in Jenkins
        maven 'M2_HOME'  // Replace with the actual Maven tool name set in Jenkins
    }

    stages {
        stage('Hello') {
            steps {
                echo 'Hello World'
            }
        }

        stage('Git') {
            steps {
                // Ensure that the branch name and repository URL are correct
                git branch: 'yassine-kalboussi', changelog: false, poll: false, url: 'https://github.com/CAPDEV-ORG/DevOps-ProjectFoyer.git'
            }
        }

        stage('Testing mvn') {
            steps {
                // Display the installed Maven version
                sh 'mvn --version'
            }
        }

        stage('Build') {
            steps {
                // Clean and install Maven dependencies
                sh 'mvn clean install'
            }
        }

        stage('Display Date') {
            steps {
                script {
                    // Display the current date and time in the Jenkins log
                    def currentDate = new Date()
                    echo "Current Date: ${currentDate}"
                }
            }
        }
    }
post {
        success {
            emailext(
                subject: "SUCCESS: Build #${currentBuild.number} - ${currentBuild.fullDisplayName}",
                body: """
                    <h2>Build Successful!</h2>
                    <p>The build was successful!</p>
                    <p>Check it out here: <a href="${env.BUILD_URL}">${env.BUILD_URL}</a></p>
                    <p>Commit: <strong>${env.GIT_COMMIT}</strong></p>
                    <p>Branch: <strong>${env.GIT_BRANCH}</strong></p>
                    <p>Duration: <strong>${currentBuild.durationString}</strong></p>
                """,
                to: 'kalboussi.yassine@esprit.tn',
                mimeType: 'text/html' // Use HTML for better formatting
            )
        }
        failure {
            emailext(
                subject: "FAILED: Build #${currentBuild.number} - ${currentBuild.fullDisplayName}",
                body: """
                    <h2>Build Failed!</h2>
                    <p>The build has failed.</p>
                    <p>Check the logs here: <a href="${env.BUILD_URL}">${env.BUILD_URL}</a></p>
                    <p>Commit: <strong>${env.GIT_COMMIT}</strong></p>
                    <p>Branch: <strong>${env.GIT_BRANCH}</strong></p>
                    <p>Triggered by: <strong>${currentBuild.getCause(hudson.model.Cause$PushCause)?.shortDescription ?: 'N/A'}</strong></p>
                """,
                to: 'kalboussi.yassine@esprit.tn',
                mimeType: 'text/html' // Use HTML for better formatting
            )
        }
    }
}
